{
  "swaggerDefinition": {
    "openapi": "3.0.3",
    "info": {
      "title": "Hungry Hippo API",
      "description": "API for the Web Application Hungry Hippo that allows the user to order food and track their order status.",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "http://localhost:3000/api"
      }
    ],
    "tags": [
      {
        "name": "Auth",
        "description": "Authentication routes"
      },
      {
        "name": "ResetPassword",
        "description": "Password reset routes"
      }
    ],
    "paths": {
      "/auth/signup": {
        "post": {
          "summary": "Signup a new user",
          "description": "Fields required: `username, email, password, confirmPassword`",
          "tags": ["Auth"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["username", "email", "password", "confirmPassword"],
                  "properties": {
                    "username": {
                      "type": "string",
                      "description": "Required. The unique username for the user."
                    },
                    "email": {
                      "type": "string",
                      "description": "Required. The email address of the user."
                    },
                    "password": {
                      "type": "string",
                      "description": "Required. The password for the user account."
                    },
                    "confirmPassword": {
                      "type": "string",
                      "description": "Required. The password confirmation for the user account."
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The first name of the user."
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The last name of the user."
                    },
                    "contact": {
                      "type": "string",
                      "description": "The contact number of the user."
                    }
                  },
                  "example": {
                    "username": "JohnDoe",
                    "email": "john.doe@example.com",
                    "password": "password123",
                    "confirmPassword": "password123",
                    "firstName": "John",
                    "lastName": "Doe",
                    "contact": "1234567890"
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "User created successfully"
                      },
                      "data": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "fail"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to create user or Password must be at least 7 characters long"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "fail"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to create user"
                      },
                      "error": {
                        "type": "string",
                        "example": "error.message"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/auth/login": {
        "post": {
          "summary": "Login a user",
          "description": "Fields required: `username`, or `email`, and `password`",
          "tags": ["Auth"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "description": "The username of the user."
                    },
                    "email": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "password": {
                      "type": "string",
                      "description": "Required. The password for the user account."
                    }
                  },
                  "example": {
                    "username": "JohnDoe",
                    "email": "john.doe@example.com",
                    "password": "password123"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User logged in successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "User logged in successfully"
                      },
                      "token": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/auth/logout": {
        "post": {
          "summary": "Logout a user",
          "tags": ["Auth"],
          "responses": {
            "200": {
              "description": "User logged out successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "User logged out successfully"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/auth/refresh-token": {
        "get": {
          "summary": "Refresh the access token",
          "tags": ["Auth"],
          "responses": {
            "200": {
              "description": "Token refreshed successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Token refreshed successfully"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/resetpassword/send-password-reset-email": {
        "post": {
          "summary": "Send password reset email",
          "description": "Sends a password reset email to the user with a reset token.",
          "tags": ["ResetPassword"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "Required. The email address of the user."
                    }
                  },
                  "example": {
                    "email": "john.doe@example.com"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Password reset email sent",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Password reset email sent"
                      },
                      "link": {
                        "type": "string",
                        "example": "http://localhost:3000/api/resetpassword/reset-link/{token}"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "User not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "fail"
                      },
                      "message": {
                        "type": "string",
                        "example": "User not found"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "fail"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to send password reset email"
                      },
                      "error": {
                        "type": "string",
                        "example": "error.message"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/resetpassword/reset-link/{token}": {
        "get": {
          "summary": "Authorize reset token",
          "description": "Authorize the reset token provided in the URL.",
          "tags": ["ResetPassword"],
          "parameters": [
            {
              "name": "token",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The reset token."
            }
          ],
          "responses": {
            "302": {
              "description": "Redirect to change password",
              "headers": {
                "Location": {
                  "description": "URL to change password",
                  "schema": {
                    "type": "string",
                    "example": "{FRONTEND_URL}/auth/change-password"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid or expired token",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "fail"
                      },
                      "message": {
                        "type": "string",
                        "example": "Invalid or expired token"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "User not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "fail"
                      },
                      "message": {
                        "type": "string",
                        "example": "User not found"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "fail"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to authorize token"
                      },
                      "error": {
                        "type": "string",
                        "example": "error.message"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/resetpassword/reset-password": {
        "post": {
          "summary": "Reset password",
          "description": "Reset the user's password using the token.",
          "tags": ["ResetPassword"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "password": {
                      "type": "string",
                      "description": "Required. The new password for the user account."
                    },
                    "confirmPassword": {
                      "type": "string",
                      "description": "Required. The password confirmation for the user account."
                    }
                  },
                  "example": {
                    "password": "newpassword123",
                    "confirmPassword": "newpassword123"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Password reset successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Password reset successfully"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Passwords do not match",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "fail"
                      },
                      "message": {
                        "type": "string",
                        "example": "Passwords do not match"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "User not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "fail"
                      },
                      "message": {
                        "type": "string",
                        "example": "User not found"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "fail"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to reset password"
                      },
                      "error": {
                        "type": "string",
                        "example": "error.message"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "apis": ["./routes/*.js"]
}
